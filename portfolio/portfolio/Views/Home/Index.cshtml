@using portfolio.Infrastructure.Models.PartialModels

<section id="section-header" class="cmd-anim cmd-title flex-center">
    <div class="cmd-line flex-center">
        <p class="cmd-line1">&nbsp;</p>
        <p class="cmd-line2">&nbsp;</p>
        <p class="cmd-line3">&nbsp;</p>
    </div>
</section>
<section id="section-about" class="bg-off-white">
    <h1>> About me</h1>
    <p class="section-content">
        I'm a full-stack developer (60% backend / 40% frontend) found in Brampton, ON.<br />
        I have a passion in providing simple and efficient solutions for any problem.
    </p>
    @*<p class="text-center">
            Here is a list of work experience I have had so far:
            If
            there was any mantra I'd follow it would have to be "efficiency in simplicity".
        </p>*@
    <div id="div-experience">
        <div class="exp-row flex-center">
            <div id="kubra-logo" class="exp-logo box-shadow">
                <a href="https://kubra.com"></a>
            </div>
            <div class="exp-summary">
                <p>
                    I worked at KUBRA as a Programmer / Analyst where I delved deep in payment solutions and large amounts of data.
                    Due to working with huge server and database loads, I learned how best to optimize solutions for millions of users.
                    With that being said, I also made a lot of friends along the way-but more importantly-gained greater insight on how to create
                    modular and robust solutions using a slew of technology.
                </p>
            </div>
        </div>
        <div class="exp-connector">
        </div>
        <div class="exp-row flex-center">
            <div id="rd-logo" class="exp-logo box-shadow">
                <a href="https://richmondday.com"></a>
            </div>
            <div class="exp-summary">
                <p>
                    Working at Richmond Day as a Web Developer was quite challenging and rigorous, but at the same time substantially rewarding.
                    This was where I crafted solutions for BMW, MINI, and LG (just to new a few) from the ground up
                    in order to solve any problem provided (with quite literally any tech involved).
                    Some examples included systems that collected payments, customer interaction tracking, display kiosks, and scheduling systems.
                </p>
            </div>
        </div>
        <div class="exp-connector">
        </div>
        <div class="exp-row flex-center">
            <div id="remax-logo" class="exp-logo box-shadow">
                <a href="https://remax.com"></a>
            </div>
            <div class="exp-summary">
                <p>
                    I joined RE/MAX as a Full Stack Developer where I journeyed into full-time Angular, AWS, and .NET Core development.
                    With one of the most modular architecture designs I had the pleasure of working with, I was excited to get started solving
                    any problem I came across. I optimized, fixed, and added new features to remax.ca which helped propel additional
                    views to the platform. However, due to the COVID-19 pandemic my time was cut short here and I had to say my good-byes.
                </p>
            </div>
        </div>
        @* Below is used for the line animation  *@
        <div class="exp-line-anim">

        </div>
    </div>
</section>
<section id="section-skills">
    <h1>
        > Skills
    </h1>
    @*<p class="section-content">
            I started with heavy backend development, but due to my own passion and curiosity I now develop for both the
            frontend (client side) and backend (server side).
        </p>*@
    <div class="skill-bars">
        @{
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel("C#", 90));
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel(".NET/Core", 90));
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel("SQL Server", 80));
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel("JavaScript", 70));
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel("Angular", 50));
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel("HTML", 80));
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel("CSS/Sass", 70));
            await Html.RenderPartialAsync("_SkillBarPartial", new SkillPartialViewModel("AWS", 60));
        }
    </div>
</section>
@*<section id="section-contact" class="bg-light-grey">
        <h1>
            > Contact me
        </h1>
        <p class="section-content">
            Have a question or want to work together?
        </p>
    </section>*@

@section Scripts {
    <script>
        $(function () {

            init();

            function init() {
                animateNextLine();
            }

            // Animate lines being typed
            function animateCmd(content, $element, callback, charPosition = 0, linePosition = 0) {
                let chopper = [];

                // chop lines
                chopper = content.split('');
                setTimeout(() => {
                    if (charPosition < content.length) {
                        let tempCmdLine = "";
                        for (var i = 0; i <= charPosition; i++) {
                            tempCmdLine = tempCmdLine + chopper[i];
                        }
                        $element.text(tempCmdLine);
                        charPosition++;
                        animateCmd(content, $element, callback, charPosition, linePosition);
                        $element.addClass("blink");
                    } else {
                        // callback
                        linePosition++;
                        $element.removeClass("blink");
                        callback(linePosition);
                    }
                }, 65);
            }

            // Find's which line to type out next. Callback / init func.
            function animateNextLine(linePos = 0) {
                var lines = [
                    ["> Hello world.", ".cmd-line1"],
                    ["> I'm Christian Reyes.", ".cmd-line2"],
                    ["> Full-stack web developer", ".cmd-line3"]
                ];

                if (linePos < lines.length) {
                    animateCmd(lines[linePos][0], $(lines[linePos][1]), animateNextLine, 0, linePos);
                } else {
                    linePos--;
                    $(lines[linePos][1]).addClass("blink");
                }
            }
        });
    </script>
}